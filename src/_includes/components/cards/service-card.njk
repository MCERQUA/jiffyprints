{# Component: Service Card #}
{# Description: Individual service showcase card with glassmorphism effects #}
{# Props: title, description, icon, link #}
{# Variants: light, dark #}
{# Lines: 135 #}

{% set component_data = {
  title: card_data.title or title or "Service Title",
  description: card_data.description or description or "Service description",
  icon: card_data.icon or icon or "ðŸŽ¯",
  link: card_data.link or link or null,
  variant: card_data.variant or variant or "light"
} %}

<div class="service-card variant-{{ component_data.variant }} {% if component_data.variant == 'dark' %}card-dark{% else %}card-light{% endif %}">
    <div class="service-icon">
        {{ component_data.icon | safe }}
    </div>
    
    <div class="service-content">
        <h3 class="heading-md">{{ component_data.title }}</h3>
        <p class="body-text">{{ component_data.description }}</p>
        
        {% if component_data.link %}
        <a href="{{ component_data.link.url }}" class="service-link">
            {{ component_data.link.text or "Learn More" }}
        </a>
        {% endif %}
    </div>
</div>

<style>
.service-card {
    text-align: center;
    padding: 3rem 2.5rem;
    border-radius: 24px;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

/* Light variant glassmorphism */
.service-card.card-light {
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 
        0 8px 32px rgba(0, 0, 0, 0.06),
        0 4px 16px rgba(0, 0, 0, 0.04),
        inset 0 1px 0 rgba(255, 255, 255, 0.8);
}

/* Dark variant glassmorphism */
.service-card.card-dark {
    background: rgba(26, 26, 26, 0.9);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 
        0 8px 32px rgba(0, 0, 0, 0.3),
        0 4px 16px rgba(0, 0, 0, 0.2),
        inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

/* Glass reflection effect */
.service-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg, 
        transparent, 
        rgba(255, 255, 255, 0.4), 
        transparent
    );
    transition: left 0.6s ease;
    z-index: 1;
}

.service-card.card-dark::before {
    background: linear-gradient(
        90deg, 
        transparent, 
        rgba(255, 255, 255, 0.2), 
        transparent
    );
}

.service-card:hover::before {
    left: 100%;
}

/* Hover effects */
.service-card:hover {
    transform: translateY(-12px) scale(1.03);
}

.service-card.card-light:hover {
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(30px);
    box-shadow: 
        0 20px 60px rgba(0, 0, 0, 0.12),
        0 10px 30px rgba(0, 0, 0, 0.08),
        0 0 30px rgba(220, 38, 38, 0.1),
        inset 0 1px 0 rgba(255, 255, 255, 1);
    border-color: rgba(220, 38, 38, 0.2);
}

.service-card.card-dark:hover {
    background: rgba(26, 26, 26, 0.95);
    backdrop-filter: blur(30px);
    box-shadow: 
        0 20px 60px rgba(0, 0, 0, 0.4),
        0 10px 30px rgba(0, 0, 0, 0.3),
        0 0 30px rgba(220, 38, 38, 0.2),
        inset 0 1px 0 rgba(255, 255, 255, 0.2);
    border-color: rgba(220, 38, 38, 0.3);
}

.service-icon {
    font-size: 3.5rem;
    margin-bottom: 2rem;
    color: var(--red-accent);
    transition: all 0.3s ease;
    position: relative;
    z-index: 2;
}

.service-card:hover .service-icon {
    transform: scale(1.1) rotateY(15deg);
    filter: drop-shadow(0 8px 16px rgba(220, 38, 38, 0.3));
}

.service-content {
    position: relative;
    z-index: 2;
    padding: 0 1rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.service-card h3 {
    margin-bottom: 1.5rem;
    transition: all 0.3s ease;
}

.service-card:hover h3 {
    text-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.service-card.card-dark h3 {
    color: var(--white);
}

.service-card p {
    margin-bottom: 2rem;
    transition: all 0.3s ease;
    line-height: 1.8;
    flex-grow: 1;
}

.service-card.card-dark p {
    color: var(--light-gray);
}

.service-card:hover p {
    color: var(--dark-gray);
}

.service-card.card-dark:hover p {
    color: var(--very-light-gray);
}

.service-link {
    color: var(--red-accent);
    text-decoration: none;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.8px;
    font-size: 0.875rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    padding-bottom: 2px;
    margin-top: auto;
}

.service-link::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, var(--red-accent), var(--black));
    transition: width 0.3s ease;
}

.service-link:hover {
    color: var(--black);
    transform: translateY(-2px);
}

.service-link:hover::after {
    width: 100%;
}

.variant-dark .service-link {
    color: var(--white);
}

.variant-dark .service-link:hover {
    color: var(--red-accent);
}

.variant-dark .service-link::after {
    background: linear-gradient(90deg, var(--red-accent), var(--white));
}

@media (max-width: 768px) {
    .service-card {
        padding: 2.5rem 2rem;
    }
    
    .service-icon {
        font-size: 3rem;
        margin-bottom: 1.5rem;
    }
}
</style>